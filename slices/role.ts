import {createAdminUser, createAppointmentForPatient, createCalendarEvent, createChat, createClinicalVisitForPatient, createDischargeSummaryForClinicalVisit, createEncounterForClinicalVisit, createForInvoice, createGuestForPatient, createInvoiceForClinicalVisit, createLabScanForEncounter, createLabTestForEncounter, createLabTestResult, createManager, createMedicForHospital, createMedicationForPatient, createMessageForChat, createNonMedicForHospital, createPatientForHospital, fetchActivityLogsByHospital, fetchAdminUsers, fetchAppointmentByCalendarEvent, fetchAppointmentById, fetchAppointmentsByMedic, fetchAppointmentsForCurrentMedic, fetchAppointmentsForCurrentPatient, fetchAppointmentsForPatient, fetchCalendarEventById, fetchCalendarEventsByUser, fetchChatById, fetchChatMessageById, fetchChatMessagesByChat, fetchChats, fetchClinicalVisitById, fetchClinicalVisitsForCurrentPatient, fetchClinicalVisitsForPatient, fetchCurrentGuest, fetchCurrentManager, fetchCurrentMedic, fetchCurrentNonMedic, fetchCurrentPatient, fetchCurrentUserCalendarEvents, fetchCurrentUserProfile, fetchEncounterById, fetchEncountersByClinicalVisit, fetchGuestsForCurrentPatient, fetchInvoiceById, fetchInvoicesByHospital, fetchInvoicesForCurrentPatient, fetchInvoicesForPatient, fetchLabScansByEncounter, fetchLabScansForCurrentPatient, fetchLabScansForPatient, fetchLabTestByCode, fetchLabTestsByHospital, fetchLabTestsForCurrentPatient, fetchLabTestsForPatient, fetchMedicationsForCurrentPatient, fetchMedicationsForPatient, fetchMedicsByHospital, fetchMedicsCalendarEventsByHospital, fetchNonMedicsByHospital, fetchPatientById, fetchPatientsByHospital, fetchRoles, fetchTransactionsByHospital, fetchTransactionsForCurrentPatient, fetchTransactionsForPatient, fetchUserProfileById, fetchUsers, rescheduleAppointment, settleInvoice, setupUser, shareLabTest, stopShareLabTest, updateCalendarEvent, updateCurrentManager, updateCurrentMedic, updateCurrentNonMedic, updateEncounter, updateGuest, updateLabScan, updateLabTestResult, updatePatient, updateRole, updateRolesByUser, updateServicesMedic, updateStatusAppointment, updateUserProfile} from '../thunks';
import {createSlice, isAnyOf} from '@reduxjs/toolkit';

import rolesAdapter from '../adapters/role';

export const rolesSlice = createSlice({
    name: 'roles',
    initialState: rolesAdapter.getInitialState(),
    reducers: {},
    extraReducers: (builder) => {
        builder.addMatcher(isAnyOf(createAdminUser.fulfilled, createAppointmentForPatient.fulfilled, createCalendarEvent.fulfilled, createChat.fulfilled, createClinicalVisitForPatient.fulfilled, createDischargeSummaryForClinicalVisit.fulfilled, createEncounterForClinicalVisit.fulfilled, createForInvoice.fulfilled, createGuestForPatient.fulfilled, createInvoiceForClinicalVisit.fulfilled, createLabScanForEncounter.fulfilled, createLabTestForEncounter.fulfilled, createLabTestResult.fulfilled, createManager.fulfilled, createMedicForHospital.fulfilled, createMedicationForPatient.fulfilled, createMessageForChat.fulfilled, createNonMedicForHospital.fulfilled, createPatientForHospital.fulfilled, fetchActivityLogsByHospital.fulfilled, fetchAdminUsers.fulfilled, fetchAppointmentByCalendarEvent.fulfilled, fetchAppointmentById.fulfilled, fetchAppointmentsByMedic.fulfilled, fetchAppointmentsForCurrentMedic.fulfilled, fetchAppointmentsForCurrentPatient.fulfilled, fetchAppointmentsForPatient.fulfilled, fetchCalendarEventById.fulfilled, fetchCalendarEventsByUser.fulfilled, fetchChatById.fulfilled, fetchChatMessageById.fulfilled, fetchChatMessagesByChat.fulfilled, fetchChats.fulfilled, fetchClinicalVisitById.fulfilled, fetchClinicalVisitsForCurrentPatient.fulfilled, fetchClinicalVisitsForPatient.fulfilled, fetchCurrentGuest.fulfilled, fetchCurrentManager.fulfilled, fetchCurrentMedic.fulfilled, fetchCurrentNonMedic.fulfilled, fetchCurrentPatient.fulfilled, fetchCurrentUserCalendarEvents.fulfilled, fetchCurrentUserProfile.fulfilled, fetchEncounterById.fulfilled, fetchEncountersByClinicalVisit.fulfilled, fetchGuestsForCurrentPatient.fulfilled, fetchInvoiceById.fulfilled, fetchInvoicesByHospital.fulfilled, fetchInvoicesForCurrentPatient.fulfilled, fetchInvoicesForPatient.fulfilled, fetchLabScansByEncounter.fulfilled, fetchLabScansForCurrentPatient.fulfilled, fetchLabScansForPatient.fulfilled, fetchLabTestByCode.fulfilled, fetchLabTestsByHospital.fulfilled, fetchLabTestsForCurrentPatient.fulfilled, fetchLabTestsForPatient.fulfilled, fetchMedicationsForCurrentPatient.fulfilled, fetchMedicationsForPatient.fulfilled, fetchMedicsByHospital.fulfilled, fetchMedicsCalendarEventsByHospital.fulfilled, fetchNonMedicsByHospital.fulfilled, fetchPatientById.fulfilled, fetchPatientsByHospital.fulfilled, fetchRoles.fulfilled, fetchTransactionsByHospital.fulfilled, fetchTransactionsForCurrentPatient.fulfilled, fetchTransactionsForPatient.fulfilled, fetchUserProfileById.fulfilled, fetchUsers.fulfilled, rescheduleAppointment.fulfilled, settleInvoice.fulfilled, setupUser.fulfilled, shareLabTest.fulfilled, stopShareLabTest.fulfilled, updateCalendarEvent.fulfilled, updateCurrentManager.fulfilled, updateCurrentMedic.fulfilled, updateCurrentNonMedic.fulfilled, updateEncounter.fulfilled, updateGuest.fulfilled, updateLabScan.fulfilled, updateLabTestResult.fulfilled, updatePatient.fulfilled, updateRole.fulfilled, updateRolesByUser.fulfilled, updateServicesMedic.fulfilled, updateStatusAppointment.fulfilled, updateUserProfile.fulfilled), (state, action) => {
            rolesAdapter.upsertMany(state, action.payload.entities.roles);
        });
    },
});

export const rolesReducer = rolesSlice.reducer;

export const rolesActions = rolesSlice.actions;